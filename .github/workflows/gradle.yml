# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Spring Boot & Gradle CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest     #실행 환경 

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'   #이클립스 
        
    - name: Grant execute permission for gradlew
      run: chmod +x ./simpleBoard/gradlew
      shell: bash
        
    - name: Build with Gradle
      working-directory: ./simpleBoard
      run: ./gradlew clean build -x test
        
      # 전송할 파일을 담을 디렉토리 생성
    - name: Make Directory for deliver
      run: mkdir deploy

      # Jar 파일 Copy
    - name: Copy Jar
      run: cp ./simpleBoard/build/libs/*.jar ./deploy/
      
      ####
     # appspec.yml Copy
    - name: Copy appspec
      run: cp ./appspec.yml ./deploy/

    # script file Copy
    - name: Copy shell
      run: cp ./scripts/* ./deploy/     
      
      ####

      # 압축파일 형태로 전달
    - name: Make zip file
      run: zip -r ./$PROJECT_NAME.zip . 
      shell: bash

      # S3 Bucket으로 copy
    - name: Deliver to AWS S3
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: |
        aws s3 cp --region ap-northeast-2 --acl private ./$PROJECT_NAME.zip s3://simpleboardbuckets3/

####

      # Deploy
    - name: Deploy
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: aws deploy create-deployment --application-name simpleBoard --deployment-group-name simpleBoard-deploy-group --file-exists-behavior OVERWRITE --s3-location bucket=simpleBoard-build,bundleType=zip,key=simpleBoard-build.zip --region ap-northeast-2


