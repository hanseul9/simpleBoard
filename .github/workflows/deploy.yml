# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle


env:  
  S3_BUCKET_NAME: simpleboardbucket 
  PROJECT_NAME: simpleBoard
  CODE_DEPLOY_APP_NAME: SimpleBoard
  CODE_DEPLOY_GROUP_NAME: SimpleBoard-group

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Build with Gradle
      working-directory: ./simpleBoard
      run: ./gradlew clean build -x test

    # 전송할 파일을 담을 디렉토리 생성
    - name: Make Directory for deliver
      run: mkdir deploy
      
      
      ####
      
    # appspec.yml Copy
    - name: Copy appspec
      run: cp ./appspec.yml ./deploy/

    # script file Copy
    - name: Copy shell
      run: cp ./scripts/* .
          
      ####


      # Jar 파일 Copy
    - name: Copy Jar
      run: cp ./simpleBoard/build/libs/*.jar .

    # 압축파일 형태로 전달
    - name: Make zip file
      run: zip -r ./$PROJECT_NAME.zip . 
      shell: bash

    # S3 버킷에 파일을 업로드
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-2

    - name: Upload to S3
      run: aws s3 cp --region ap-northeast-2 ./$PROJECT_NAME.zip s3://$S3_BUCKET_NAME/$PROJECT_NAME/$PROJECT_NAME.zip

    # Code Deploy
    - name: Code Deploy
      run: aws deploy create-deployment --application-name $CODE_DEPLOY_APP_NAME --deployment-config-name CodeDeployDefault.AllAtOnce --deployment-group-name $CODE_DEPLOY_GROUP_NAME --s3-location bucket=$S3_BUCKET_NAME,bundleType=zip,key=$PROJECT_NAME/$PROJECT_NAME.zip


